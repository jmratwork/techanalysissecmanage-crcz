<#
.SYNOPSIS
    Generates benign events that resemble common malware behaviors.

.DESCRIPTION
    The script periodically attempts outbound web requests and drops
    text files to a specified directory. These actions are useful for
    generating activity visible to monitoring tools such as NG-SIEM
    and BIPS without performing any harmful operations.

.PARAMETER BeaconCount
    Number of beacon attempts and file drops to perform.

.PARAMETER BeaconIntervalSeconds
    Time in seconds between each beacon and file drop.

.PARAMETER BeaconUrl
    Destination URL for the simulated beacon traffic. Can also be set via
    the `BEACON_URL` environment variable. Defaults to a locally reachable
    NG-SIEM endpoint.

.PARAMETER DropDirectory
    Location where benign files will be written.

.PARAMETER Cleanup
    Removes any files created by the script and exits.
#>

param(
    [int]$BeaconCount = 5,
    [int]$BeaconIntervalSeconds = 60,
    [string]$BeaconUrl,
    [string]$DropDirectory = "$env:TEMP\BenignMalwareSim",
    [switch]$Cleanup
)

if (-not $BeaconUrl) {
    $BeaconUrl = $env:BEACON_URL
}

if (-not $BeaconUrl) {
    $BeaconUrl = 'http://localhost:5601/beacon'
}

if ($Cleanup) {
    if (Test-Path $DropDirectory) {
        Remove-Item $DropDirectory -Recurse -Force
    }
    Write-Host "Cleanup complete."
    exit
}

New-Item -ItemType Directory -Path $DropDirectory -Force | Out-Null

for ($i = 1; $i -le $BeaconCount; $i++) {
    try {
        $timestamp = [uri]::EscapeDataString((Get-Date).ToString('o'))
        $fullUrl = "$BeaconUrl?beacon=$i&time=$timestamp"
        $uri = [Uri]$fullUrl
        Invoke-WebRequest -Uri $uri -UseBasicParsing -TimeoutSec 10 | Out-Null
        Write-Host "Beacon $i sent to $BeaconUrl"
    } catch {
        Write-Warning "Beacon $i failed: $_"
    }

    $filePath = Join-Path $DropDirectory ("drop_$i_" + (Get-Date -Format yyyyMMddHHmmss) + ".txt")
    "Benign simulation file $i created at $(Get-Date -Format o)" | Out-File -FilePath $filePath

    Start-Sleep -Seconds $BeaconIntervalSeconds
}

Write-Host "Simulation complete. Files located at $DropDirectory"
